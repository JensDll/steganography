apiVersion: v1
kind: ConfigMap
metadata:
  name: web-config
data:
  nginx.conf: |
    load_module /usr/lib/nginx/modules/ngx_http_brotli_filter_module.so;
    load_module /usr/lib/nginx/modules/ngx_http_brotli_static_module.so;

    worker_processes auto;

    error_log /var/log/nginx/error.log notice;
    pid /tmp/nginx.pid;

    events {
      worker_connections 1024;
    }

    http {
      proxy_temp_path /tmp/proxy_temp;
      client_body_temp_path /tmp/client_temp;
      fastcgi_temp_path /tmp/fastcgi_temp;
      uwsgi_temp_path /tmp/uwsgi_temp;
      scgi_temp_path /tmp/scgi_temp;

      log_format main
        '$remote_addr - [$time_local] '
        '[$request $status $body_bytes_sent] '
        '[$http_referer] [$http_user_agent]';

      access_log /var/log/nginx/access.log main;

      sendfile on;
      server_tokens off;

      keepalive_timeout 65;

      include /etc/nginx/mime_type.conf;
      include /etc/nginx/ssl.conf;

      gzip_static on;

      brotli_static on;

      include /etc/nginx/server/*.conf;
    }

  mime_type.conf: |
    types {
      text/html html;
      text/css css;

      image/svg+xml svg;

      font/woff woff;
      font/woff2 woff2;

      application/javascript js;
    }

    default_type application/octet-stream;
    charset_types text/css image/svg+xml application/javascript;

  ssl.conf: |
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_conf_command Options PrioritizeChaCha;
    ssl_prefer_server_ciphers on;
    ssl_certificate /usr/local/certs/tls.crt;
    ssl_certificate_key /usr/local/certs/tls.key;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;

  common_header.conf: |
    add_header X-Content-Type-Options "nosniff" always;
    add_header Strict-Transport-Security "max-age=315360000;includeSubDomains;preload" always;

  server.conf: |
    server {
      listen 8443 ssl http2;
      server_name steganography.app;

      root /data/www;
      charset utf-8;
      if_modified_since off;
      etag off;

      location / {
        try_files $uri /index.html;
        add_header Cache-Control "private,no-cache,no-store,must-revalidate,max-age=0";
        add_header Content-Security-Policy "default-src 'self';script-src 'self' 'sha256-8atrH6Pge+As3TgWrRwcD2pUDCYuTIBfIIqQGFDl3eA=';img-src 'self' data: blob:;connect-src 'self' sentry.io https://api.steganography.app;upgrade-insecure-requests;form-action 'none';report-uri https://o4504621394165760.ingest.sentry.io/api/4504621566001152/security/?sentry_key=ab4ccfc57221482aafb411c6b9b4744a" always;
        add_header X-XSS-Protection "0" always;
        include /etc/nginx/common_header.conf;
      }

      location /assets {
        add_header Cache-Control "public,max-age=315360000,immutable";
        include /etc/nginx/common_header.conf;
      }
    }

    server {
      listen 8443 ssl http2;
      server_name www.steganography.app;
      include /etc/nginx/common_header.conf;
      return 301 https://steganography.app$request_uri;
    }
